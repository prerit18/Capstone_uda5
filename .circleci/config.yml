# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

orbs:
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@0.12.0


jobs:
  install_lint:
    docker:
    # Use the same Docker base as the project
      - image: python:3.7.3-stretch

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
                chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run lint!
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint 
  
  build-upload-image:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t prerit18/mlpred .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push prerit18/mlpred
  deploy:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          capstone12
        type: string
      aws-region:
        description: |
          us-east-2
        type: string
    steps:
      - checkout
      - kubernetes/install
      - run:
          name: Install the eksctl tool
          command: |
            if which eksctl > /dev/null; then
              echo "eksctl is already installed"
              exit 0
            fi
            mkdir -p eksctl_download
            curl --silent --location --retry 5 "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" \
              | tar xz -C eksctl_download
            chmod +x eksctl_download/eksctl
            SUDO=""
            if [ $(id -u) -ne 0 ] && which sudo > /dev/null ; then
              SUDO="sudo"
            fi
            $SUDO mv eksctl_download/eksctl /usr/local/bin/
            rmdir eksctl_download
      - aws-eks/create-cluster:
          cluster-name: << parameters.cluster-name >>
          aws-region: <<parameters.aws-region >>

      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          aws-region: <<parameters.aws-region >>
      - run:
          name: Deploying application to EKS
          command: |
             aws eks --region us-east-2 update-kubeconfig --name capstone18
             kubectl config use-context arn:aws:eks:us-east-2:137296364381:cluster/capstone18
             kubectl apply -f deployment.yml
             kubectl get pods
             kubectl get services
workflows:
  default:
    jobs:
      - install_lint
#      - lint:
#          requires: [install]
      - build-upload-image:
#          requires: [install_lint]
#      - deploy:
#          requires: [build-image]
#          cluster-name: capstone18
#          aws-region: us-east-2
